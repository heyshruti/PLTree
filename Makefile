CC = gcc
CFLAGS = -Wall

TARFILES = Makefile scanner.mll parser.mly ast.mli calc.ml

OBJS = parser.cmo scanner.cmo calc.cmo

calc : $(OBJS)
	ocamlc -o calc $(OBJS)

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

.PHONY : menhir
menhir:
	menhir -v parser.mly

hello: hello.o tree.o

hello.o: hello.c tree.h

hello.c: calc hello.tree
	cat hello.tree | ./calc -c > hello.c


calculator.tar.gz : $(TARFILES)
	cd .. && tar zcf calculator/calculator.tar.gz $(TARFILES:%=calculator/%)

.PHONY : clean
clean :
	rm -f calc parser.ml parser.mli scanner.ml 
	rm -f *.cmo *.cmi hello hello.c tree tree.o hello.o
	rm -f *.automaton *.conflicts

# Generated by ocamldep *.ml *.mli
ast_temp.cmo :
ast_temp.cmx :
calc.cmo : scanner.cmo parser.cmi ast.cmi
calc.cmx : scanner.cmx parser.cmx ast.cmi
compile.cmo : ast.cmi
compile.cmx : ast.cmi
execute.cmo : ast.cmi
execute.cmx : ast.cmi
parser.cmo : ast.cmi parser.cmi
parser.cmx : ast.cmi parser.cmi
pltree.cmo : scanner.cmo parser.cmi execute.cmo compile.cmo ast.cmi
pltree.cmx : scanner.cmx parser.cmx execute.cmx compile.cmx ast.cmi
read.cmo : scanner.cmo parser.cmi ast.cmi
read.cmx : scanner.cmx parser.cmx ast.cmi
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
ast.cmi :
parser.cmi : ast.cmi

